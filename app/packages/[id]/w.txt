// app/parks/[slug]/page.js
"use client";
import { useState, useEffect } from 'react';
import { useParams } from 'next/navigation';
import Link from 'next/link';
import { 
  FaStar, FaChevronLeft, FaCheck, FaTimes, FaMapMarkerAlt, 
  FaGlobe, FaUmbrella, FaBinoculars, FaRoute, FaPlane, 
  FaShieldAlt, FaStethoscope, FaTree, FaPaw, FaCloudSun,
  FaCalendarAlt, FaMap, FaExclamationTriangle
} from 'react-icons/fa';

import { mockParksData } from '../../../lib/mockData';

const ParkDetailPage = () => {
  const params = useParams();
  const { slug } = params;
  const [activeTab, setActiveTab] = useState('overview');
  const [parkData, setParkData] = useState(null);

  useEffect(() => {
    if (!slug) return;

    // Map slug to park key
    const parkKey = slug
      .replace(/-national-park/g, 'NationalPark')
      .replace(/-crater/g, 'Crater')
      .replace(/-mountains/g, 'Mountains')
      .replace(/-island/g, 'Island')
      .replace(/-game-reserve/g, 'GameReserve')
      .split('-')
      .map((word, i) => (i === 0 ? word : word.charAt(0).toUpperCase() + word.slice(1)))
      .join('');

    const basePark = mockParksData.tanzania.parksAndReserves.allParks.find(p => p.slug === slug);
    const detailedData = mockParksData[parkKey] || {};

    if (basePark) {
      setParkData({ ...basePark, detailed: detailedData });
    }
  }, [slug]);

  if (!parkData) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-green-50 to-blue-50">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-green-600 mx-auto mb-4"></div>
          <p className="text-gray-600 font-medium">Loading park details...</p>
        </div>
      </div>
    );
  }

  // Render stars with improved styling
  const renderStars = (rating) => {
    return (
      <div className="flex items-center">
        {[...Array(5)].map((_, i) => (
          <FaStar
            key={i}
            className={`w-4 h-4 ${
              i < Math.floor(rating) 
                ? 'text-yellow-400 fill-current' 
                : 'text-gray-300 fill-current'
            }`}
          />
        ))}
        <span className="ml-2 font-semibold text-gray-700">{rating.toFixed(1)}</span>
      </div>
    );
  };

  // Tab config with improved icons
  const tabs = [
    { id: 'overview', label: 'Overview', icon: <FaGlobe className="w-4 h-4" /> },
    { id: 'wildlife', label: 'Wildlife', icon: <FaPaw className="w-4 h-4" /> },
    { id: 'birds', label: 'Bird Watching', icon: <FaBinoculars className="w-4 h-4" /> },
    { id: 'bestTimeToVisit', label: 'Best Time', icon: <FaCalendarAlt className="w-4 h-4" /> },
    { id: 'weatherAndClimate', label: 'Weather', icon: <FaCloudSun className="w-4 h-4" /> },
    { id: 'howToGetThere', label: 'Getting There', icon: <FaPlane className="w-4 h-4" /> },
    { id: 'malariaAndSafety', label: 'Health & Safety', icon: <FaShieldAlt className="w-4 h-4" /> },
    { id: 'reviews', label: 'Reviews', icon: <FaStar className="w-4 h-4" /> }
  ];

  // Stats card component
  const StatCard = ({ icon, label, value, color = "blue" }) => (
    <div className={`bg-white rounded-xl p-4 border-l-4 border-${color}-500 shadow-sm hover:shadow-md transition-shadow`}>
      <div className="flex items-center mb-2">
        <div className={`text-${color}-500 mr-2`}>{icon}</div>
        <span className="text-sm font-medium text-gray-600">{label}</span>
      </div>
      <p className="text-lg font-bold text-gray-800">{value}</p>
    </div>
  );

  // Feature list component
  const FeatureList = ({ items, type = "pro" }) => (
    <ul className="space-y-2">
      {items.map((item, index) => (
        <li key={index} className="flex items-start">
          {type === "pro" ? (
            <FaCheck className="text-green-500 mt-1 mr-3 flex-shrink-0" />
          ) : (
            <FaTimes className="text-red-500 mt-1 mr-3 flex-shrink-0" />
          )}
          <span className="text-gray-700">{item}</span>
        </li>
      ))}
    </ul>
  );

  // Render tab content with improved styling
  const renderTabContent = () => {
    const d = parkData.detailed;
    if (!d) return <p className="text-gray-700">Content not available.</p>;

    switch (activeTab) {
      case 'overview':
        const ov = d.overview;
        return (
          <div className="space-y-8">
            {/* Expert Section */}
            <div className="bg-gradient-to-r from-blue-50 to-green-50 rounded-2xl p-6 border border-blue-100">
              <div className="flex items-start">
                <div className="bg-white p-3 rounded-full shadow-sm mr-4">
                  <FaTree className="w-6 h-6 text-green-600" />
                </div>
                <div>
                  <h3 className="font-bold text-lg text-gray-900 mb-1">Expert Insight</h3>
                  <p className="text-gray-600 text-sm mb-3">By {ov.expert.name} - {ov.expert.bio}</p>
                  <p className="text-gray-700 leading-relaxed">{ov.summary}</p>
                </div>
              </div>
            </div>

            {/* Stats Grid */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
              {Object.entries(ov.stats).map(([key, value], index) => (
                <StatCard
                  key={key}
                  icon={<FaMapMarkerAlt className="w-4 h-4" />}
                  label={key}
                  value={value}
                  color={index % 2 === 0 ? "green" : "blue"}
                />
              ))}
            </div>

            {/* Pros & Cons */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
              <div className="bg-white rounded-xl p-6 border border-green-200">
                <div className="flex items-center mb-4">
                  <div className="bg-green-100 p-2 rounded-lg mr-3">
                    <FaCheck className="w-5 h-5 text-green-600" />
                  </div>
                  <h4 className="font-bold text-lg text-green-800">Pros</h4>
                </div>
                <FeatureList items={ov.prosCons.pros} type="pro" />
              </div>

              <div className="bg-white rounded-xl p-6 border border-red-200">
                <div className="flex items-center mb-4">
                  <div className="bg-red-100 p-2 rounded-lg mr-3">
                    <FaTimes className="w-5 h-5 text-red-600" />
                  </div>
                  <h4 className="font-bold text-lg text-red-800">Cons</h4>
                </div>
                <FeatureList items={ov.prosCons.cons} type="con" />
              </div>
            </div>
          </div>
        );

      case 'wildlife':
        const w = d.wildlife;
        return (
          <div className="space-y-8">
            <div className="bg-gradient-to-r from-amber-50 to-orange-50 rounded-2xl p-6">
              <h3 className="font-bold text-xl text-gray-900 mb-3">Wildlife Overview</h3>
              <p className="text-gray-700 leading-relaxed">{w.summary}</p>
            </div>

            {/* Species Abundance */}
            <div className="bg-white rounded-xl p-6 border border-gray-200">
              <h4 className="font-bold text-lg text-gray-900 mb-4">Species Abundance</h4>
              <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
                {Object.entries(w.speciesAbundance).map(([species, status]) => (
                  <div key={species} className="text-center p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors">
                    <div className="font-semibold text-gray-800 text-sm mb-1">{species}</div>
                    <div className={`text-xs font-medium px-2 py-1 rounded-full ${
                      status === 'Abundant' ? 'bg-green-100 text-green-800' :
                      status === 'Common' ? 'bg-blue-100 text-blue-800' :
                      status === 'Occasional' ? 'bg-yellow-100 text-yellow-800' :
                      'bg-gray-100 text-gray-800'
                    }`}>
                      {status}
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* Ratings */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="bg-white rounded-xl p-6 border border-gray-200">
                <h4 className="font-bold text-lg text-gray-900 mb-4">Expert Rating</h4>
                <div className="text-center">
                  {renderStars(w.wildlifeRating.expertRating)}
                  <p className="text-sm text-gray-600 mt-2">Based on {w.wildlifeRating.expertReviews} expert reviews</p>
                </div>
              </div>
              <div className="bg-white rounded-xl p-6 border border-gray-200">
                <h4 className="font-bold text-lg text-gray-900 mb-4">User Rating</h4>
                <div className="text-center">
                  {renderStars(w.wildlifeRating.userRating)}
                  <p className="text-sm text-gray-600 mt-2">Based on {w.wildlifeRating.userReviews} user reviews</p>
                </div>
              </div>
            </div>

            {/* Highlights */}
            <div className="bg-gradient-to-r from-green-50 to-emerald-50 rounded-2xl p-6 border border-green-200">
              <h4 className="font-bold text-lg text-gray-900 mb-3">Wildlife Highlights</h4>
              <p className="text-gray-700 leading-relaxed">{w.highlights}</p>
              <div className="mt-4 p-3 bg-white rounded-lg border">
                <p className="text-sm text-gray-600">
                  <span className="font-semibold">Best Time for Wildlife:</span> {w.bestTimeForWildlife}
                </p>
              </div>
            </div>
          </div>
        );

      case 'birds':
        const b = d.birds;
        return (
          <div className="space-y-8">
            <div className="bg-gradient-to-r from-sky-50 to-blue-50 rounded-2xl p-6">
              <h3 className="font-bold text-xl text-gray-900 mb-3">Bird Watching</h3>
              <p className="text-gray-700 leading-relaxed">{b.summary}</p>
            </div>

            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
              {/* Notable Birds */}
              <div className="bg-white rounded-xl p-6 border border-gray-200">
                <h4 className="font-bold text-lg text-gray-900 mb-4">Notable Bird Species</h4>
                <div className="space-y-3">
                  {b.notableBirds.map((bird, i) => (
                    <div key={i} className="flex justify-between items-center p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors">
                      <span className="font-medium text-gray-800">{bird.name}</span>
                      <span className={`text-xs font-medium px-2 py-1 rounded-full ${
                        bird.abundance === 'Common' ? 'bg-green-100 text-green-800' :
                        bird.abundance === 'Endemic' ? 'bg-purple-100 text-purple-800' :
                        'bg-blue-100 text-blue-800'
                      }`}>
                        {bird.abundance}
                      </span>
                    </div>
                  ))}
                </div>
              </div>

              {/* Birding Facts */}
              <div className="space-y-6">
                <div className="bg-white rounded-xl p-6 border border-gray-200">
                  <h4 className="font-bold text-lg text-gray-900 mb-4">Birding Facts</h4>
                  <div className="space-y-3">
                    <div className="flex justify-between items-center p-3 bg-blue-50 rounded-lg">
                      <span className="font-medium text-gray-700">Total Species</span>
                      <span className="font-bold text-blue-600">{b.facts.totalSpecies}</span>
                    </div>
                    <div className="flex justify-between items-center p-3 bg-green-50 rounded-lg">
                      <span className="font-medium text-gray-700">Migratory Season</span>
                      <span className="font-bold text-green-600">{b.facts.migratorySeason}</span>
                    </div>
                  </div>
                </div>

                <div className="bg-gradient-to-r from-amber-50 to-orange-50 rounded-xl p-6 border border-amber-200">
                  <h4 className="font-bold text-lg text-gray-900 mb-2">Best Time for Birding</h4>
                  <p className="text-gray-700">{b.bestTimeForBirding}</p>
                </div>
              </div>
            </div>
          </div>
        );

      case 'bestTimeToVisit':
        const btv = d.bestTimeToVisit;
        return (
          <div className="space-y-8">
            <div className="bg-gradient-to-r from-purple-50 to-pink-50 rounded-2xl p-6">
              <h3 className="font-bold text-xl text-gray-900 mb-3">When to Visit</h3>
              <p className="text-gray-700 leading-relaxed">{btv.expert.bio}</p>
            </div>

            {/* Key Information */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
              <StatCard icon={<FaCalendarAlt />} label="Best Time" value={btv.keyInfo.bestTime} color="green" />
              <StatCard icon={<FaStar />} label="High Season" value={btv.keyInfo.highSeason} color="blue" />
              <StatCard icon={<FaCloudSun />} label="Best Weather" value={btv.keyInfo.bestWeather} color="yellow" />
              <StatCard icon={<FaUmbrella />} label="Low Season" value={btv.keyInfo.lowSeason} color="red" />
            </div>

            {/* Monthly Calendar */}
            <div className="bg-white rounded-xl p-6 border border-gray-200">
              <h4 className="font-bold text-lg text-gray-900 mb-6">Monthly Guide</h4>
              <div className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4">
                {Object.entries(btv.monthlyRatings).map(([month, rating]) => (
                  <div key={month} className={`text-center p-3 rounded-lg border-2 transition-all hover:scale-105 ${
                    rating === 'Excellent' ? 'bg-green-50 border-green-200' :
                    rating === 'Good' ? 'bg-blue-50 border-blue-200' :
                    rating === 'Fair' ? 'bg-yellow-50 border-yellow-200' :
                    'bg-red-50 border-red-200'
                  }`}>
                    <div className="font-semibold text-gray-800">{month.substring(0, 3)}</div>
                    <div className={`text-xs font-medium mt-1 ${
                      rating === 'Excellent' ? 'text-green-600' :
                      rating === 'Good' ? 'text-blue-600' :
                      rating === 'Fair' ? 'text-yellow-600' :
                      'text-red-600'
                    }`}>
                      {rating}
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* Season Highlights */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              <div className="bg-gradient-to-r from-blue-50 to-cyan-50 rounded-xl p-6 border border-blue-200">
                <h4 className="font-bold text-lg text-blue-800 mb-3">Dry Season ({btv.drySeason.months})</h4>
                <ul className="space-y-2">
                  {btv.drySeason.highlights.map((highlight, i) => (
                    <li key={i} className="flex items-start text-gray-700">
                      <FaCheck className="text-blue-500 mt-1 mr-2 flex-shrink-0" />
                      {highlight}
                    </li>
                  ))}
                </ul>
              </div>
              <div className="bg-gradient-to-r from-green-50 to-emerald-50 rounded-xl p-6 border border-green-200">
                <h4 className="font-bold text-lg text-green-800 mb-3">Wet Season ({btv.wetSeason.months})</h4>
                <ul className="space-y-2">
                  {btv.wetSeason.highlights.map((highlight, i) => (
                    <li key={i} className="flex items-start text-gray-700">
                      <FaCheck className="text-green-500 mt-1 mr-2 flex-shrink-0" />
                      {highlight}
                    </li>
                  ))}
                </ul>
              </div>
            </div>
          </div>
        );

      // Add other cases with similar improved styling...

      case 'reviews':
        const r = d.reviews;
        return (
          <div className="space-y-8">
            {/* Overall Rating */}
            <div className="bg-gradient-to-r from-amber-50 to-orange-50 rounded-2xl p-6 text-center">
              <div className="flex justify-center items-center mb-4">
                {renderStars(r.expertRating)}
                <span className="mx-4 text-gray-400">•</span>
                {renderStars(r.userRating)}
              </div>
              <p className="text-gray-600">
                Based on {r.expertReviews} expert reviews and {r.userReviews} user reviews
              </p>
            </div>

            {/* Reviews Grid */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
              {/* Expert Review */}
              <div className="bg-white rounded-xl p-6 border border-blue-200">
                <div className="flex items-center mb-4">
                  <div className="bg-blue-100 p-2 rounded-lg mr-3">
                    <FaStar className="w-5 h-5 text-blue-600" />
                  </div>
                  <h4 className="font-bold text-lg text-blue-800">Expert Review</h4>
                </div>
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <h5 className="font-semibold text-gray-900">{r.latestExpertReview.author}</h5>
                    <span className="text-sm text-gray-500">{r.latestExpertReview.country}</span>
                  </div>
                  {renderStars(r.latestExpertReview.rating)}
                  <h6 className="font-bold text-gray-800 text-lg">{r.latestExpertReview.title}</h6>
                  <p className="text-gray-700 leading-relaxed">{r.latestExpertReview.fullReview}</p>
                </div>
              </div>

              {/* User Review */}
              <div className="bg-white rounded-xl p-6 border border-green-200">
                <div className="flex items-center mb-4">
                  <div className="bg-green-100 p-2 rounded-lg mr-3">
                    <FaStar className="w-5 h-5 text-green-600" />
                  </div>
                  <h4 className="font-bold text-lg text-green-800">User Review</h4>
                </div>
                <div className="space-y-3">
                  <div className="flex items-center justify-between">
                    <h5 className="font-semibold text-gray-900">{r.latestUserReview.author}</h5>
                    <span className="text-sm text-gray-500">{r.latestUserReview.country}</span>
                  </div>
                  <div className="flex items-center justify-between">
                    {renderStars(r.latestUserReview.rating)}
                    <span className="text-sm text-gray-500">{r.latestUserReview.date}</span>
                  </div>
                  <p className="text-gray-700 leading-relaxed">{r.latestUserReview.review}</p>
                </div>
              </div>
            </div>
          </div>
        );

      default:
        return (
          <div className="text-center py-12">
            <div className="bg-gray-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
              <FaGlobe className="w-8 h-8 text-gray-400" />
            </div>
            <h3 className="text-lg font-semibold text-gray-700 mb-2">Content Coming Soon</h3>
            <p className="text-gray-500">We're working on adding more detailed information for this section.</p>
          </div>
        );
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 via-blue-50 to-cyan-50">
      {/* Enhanced Hero Section */}
      <div 
        className="relative h-96 bg-cover bg-center bg-no-repeat"
        style={{ 
          backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), url(${parkData.image || 'https://images.unsplash.com/photo-1516426122078-c23e76319801?ixlib=rb-4.0.3&auto=format&fit=crop&w=1920&q=80'})`,
          backgroundPosition: 'center 30%'
        }}
      >
        <div className="absolute inset-0 bg-gradient-to-t from-black/60 to-transparent"></div>
        
        {/* Navigation */}
        <div className="relative max-w-7xl mx-auto px-4 pt-6">
          <Link 
            href="/destinations/tanzania" 
            className="inline-flex items-center text-white bg-black/30 hover:bg-black/50 backdrop-blur-sm rounded-full px-4 py-2 transition-all duration-200 group"
          >
            <FaChevronLeft className="mr-2 group-hover:-translate-x-1 transition-transform" />
            Back to Tanzania Parks
          </Link>
        </div>

        {/* Hero Content */}
        <div className="relative max-w-7xl mx-auto px-4 h-full flex items-end pb-12">
          <div className="text-white">
            <div className="flex items-center mb-3">
              <div className="bg-green-500 text-white text-sm font-semibold px-3 py-1 rounded-full">
                National Park
              </div>
              <div className="ml-3 flex items-center bg-black/30 backdrop-blur-sm rounded-full px-3 py-1">
                {renderStars(parkData.rating)}
                <span className="mx-2">•</span>
                <span className="text-sm">{parkData.reviews} Reviews</span>
              </div>
            </div>
            <h1 className="text-4xl md:text-5xl font-bold mb-4 drop-shadow-2xl">{parkData.name}</h1>
            <p className="text-xl opacity-90 max-w-2xl drop-shadow-lg">
              {parkData.detailed?.overview?.summary || "Discover the wild beauty of Tanzania's premier national park"}
            </p>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="max-w-7xl mx-auto px-4 py-8 -mt-16 relative z-10">
        <div className="flex flex-col lg:flex-row gap-8">
          {/* Enhanced Sidebar */}
          <aside className="lg:w-80 flex-shrink-0">
            <nav className="bg-white rounded-2xl border border-gray-200 p-6 sticky top-6 shadow-lg">
              <h3 className="font-bold text-gray-900 text-lg mb-6 flex items-center">
                <FaMap className="w-5 h-5 text-green-600 mr-2" />
                Park Guide
              </h3>
              <div className="space-y-2">
                {tabs.map((tab) => (
                  <button
                    key={tab.id}
                    onClick={() => setActiveTab(tab.id)}
                    className={`w-full text-left px-4 py-3 rounded-xl flex items-center transition-all duration-200 ${
                      activeTab === tab.id
                        ? 'bg-gradient-to-r from-green-500 to-blue-500 text-white shadow-lg transform -translate-y-0.5'
                        : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900 hover:shadow-md'
                    }`}
                  >
                    <span className={`mr-3 ${activeTab === tab.id ? 'text-white' : 'text-gray-400'}`}>
                      {tab.icon}
                    </span>
                    {tab.label}
                  </button>
                ))}
              </div>
            </nav>
          </aside>

          {/* Enhanced Main Content */}
          <main className="flex-1">
            <div className="bg-white rounded-2xl border border-gray-200 p-8 shadow-lg">
              {renderTabContent()}
            </div>
          </main>
        </div>
      </div>
    </div>
  );
};

export default ParkDetailPage;